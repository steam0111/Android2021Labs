/**
 * The first line in the build configuration applies the Android plugin for
 * Gradle to this build and makes the android block available to specify
 * Android-specific build options.
 */
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

android {
    /**
     * compileSdkVersion specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     */
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.share.art"
        minSdkVersion 26
        targetSdkVersion 30 //Целевая версия приложения, если targetSdkVersion < версия установленная на телефоне
        //система будет активировать совместимость
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

//    buildFeatures {
//        compose true
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

//    composeOptions {
//        kotlinCompilerExtensionVersion '1.0.2'
//    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    def compose_version = '1.0.2'

    implementation 'com.google.ar:core:1.26.0'
    implementation project(":helpers")

    implementation 'com.google.firebase:firebase-database:20.0.2'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'

    def lifecycle_version = "2.3.1"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    
//    implementation "androidx.compose.ui:ui:${compose_version}"
//    // Tooling support (Previews, etc.)
//    implementation "androidx.compose.ui:ui-tooling:${compose_version}"
//    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
//    implementation "androidx.compose.foundation:foundation:${compose_version}"
//    // Material Design
//    implementation "androidx.compose.material:material:${compose_version}"
//    // Material design icons
//    implementation "androidx.compose.material:material-icons-core:${compose_version}"
//    implementation "androidx.compose.material:material-icons-extended:${compose_version}"
//    // Integration with activities
//    implementation 'androidx.activity:activity-compose:1.3.1'
//    // Integration with ViewModels
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0-beta01'
//    // Integration with observables
//    implementation "androidx.compose.runtime:runtime-livedata:${compose_version}"
//    implementation "androidx.compose.runtime:runtime-rxjava2:${compose_version}"
}